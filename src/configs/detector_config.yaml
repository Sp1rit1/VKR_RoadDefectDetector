# src/configs/detector_config.yaml

# --- Общие Параметры, которые МОГУТ использоваться разными моделями, если не переопределены ниже ---
# Эти параметры в основном для ОБУЧЕНИЯ, predict_pipeline будет брать input_shape и classes из predict_config.yaml,
# но они здесь для полноты и если какой-то скрипт обучения будет на них ссылаться как на общие.
# Для инференса predict_pipeline важнее секции single_level_detector_params и fpn_detector_params.

# input_shape: [416, 416, 3]   # Общий входной размер по умолчанию
# classes: ["pit", "crack"]      # Общий список классов по умолчанию
# num_classes: 2                 # Общее количество классов по умолчанию
# backbone_name: "MobileNetV2" # Общий backbone по умолчанию

# --- Параметры для ОДНОУРОВНЕВОЙ модели детектора (например, твоя v1_enhanced) ---
single_level_detector_params:
  model_name_prefix: "RoadDefectDetector_v1" # Используется в train_detector для имен логов/моделей
  backbone_name: "MobileNetV2"               # Backbone, использованный для этой v1 модели
  input_shape: [416, 416, 3]              # Входной размер, на котором обучалась v1
  classes: ["pit", "crack"]                 # Классы, на которых обучалась v1 (pit:0, crack:1)
  num_classes: 2                          # Количество этих классов

  network_stride: 16 # Страйд для одноуровневой модели (например, если выход /16 от входа)

  # Якоря, использовавшиеся для обучения этой одноуровневой модели (твои 6 K-Means якорей)
  anchors_wh_normalized:
    - [0.1326, 0.0919]
    - [0.1059, 0.3704]
    - [0.3600, 0.1728]
    - [0.1484, 0.8278]
    - [0.7600, 0.2444]
    - [0.6420, 0.6129]
  num_anchors_per_location: 6 # Должно соответствовать количеству якорей выше

  # Параметры "головы" для v1 модели (используются в build_object_detector_v1_enhanced)
  head_config:
    head_body_conv_filters: 256
    head_body_depth: 2
    leaky_relu_alpha: 0.1
    l2_regularization: 0.0005 # Убедись, что это используется в модели, если не null


# --- Параметры для FPN модели детектора (например, твоя v2_fpn) ---
fpn_detector_params:
  model_name_prefix: "RoadDefectDetector_v2_FPN"
  backbone_name: "MobileNetV2"
  input_shape: [416, 416, 3]
  classes: ["pit", "crack"] # pit:0, crack:1
  num_classes: 2

  detector_fpn_levels: ['P3', 'P4', 'P5'] # Имена (или ключи) уровней FPN
  detector_fpn_strides:                 # Страйды для каждого уровня FPN
    P3: 8
    P4: 16
    P5: 32

  detector_fpn_anchor_configs: # Твои K-Means якоря для каждого уровня FPN
    P3: # stride 8
      anchors_wh_normalized:
        - [0.0619, 0.0351]
        - [0.1185, 0.0488]
        - [0.0848, 0.0807]
        - [0.0450, 0.1696]
        - [0.1728, 0.0444]
      num_anchors_this_level: 5
    P4: # stride 16
      anchors_wh_normalized:
        - [0.1778, 0.1362]
        - [0.0866, 0.3607]
        - [0.3371, 0.1366]
        - [0.5888, 0.0938]
        - [0.0774, 0.7760]
      num_anchors_this_level: 5
    P5: # stride 32
      anchors_wh_normalized:
        - [0.4437, 0.3374]
        - [0.8474, 0.2648]
        - [0.2750, 0.8508]
        - [0.7387, 0.6085]
      num_anchors_this_level: 4

  # Параметры "головы" для FPN модели (используются в build_object_detector_v2_fpn)
  head_config:
    fpn_filters: 256            # Количество фильтров в слоях самой FPN (1x1 и 3x3 свертки)
    head_depth: 2               # Количество Conv-BN-LeakyReLU блоков в каждой предсказывающей "голове"
    head_conv_filters: 256      # Фильтры в сверточных слоях предсказывающих "голов"
    leaky_relu_alpha: 0.1
    l2_regularization: null # или 0.0005

# --- Общие Параметры Обучения (могут быть переопределены в train_detector.py из DETECTOR_CONFIG) ---
# Эти параметры в основном для train_detector.py
# и используются для определения, какой режим обучения запускать.
continue_from_checkpoint: false       # Для нового обучения
path_to_checkpoint: null              # Путь к чекпоинту (если continue_from_checkpoint: true)

unfreeze_backbone: false              # Начинаем обучение с замороженным backbone
finetune_keep_bn_frozen: true         # Если backbone размораживается, оставлять ли BN слои замороженными
unfreeze_backbone_layers_from_end: 0  # 0 = разморозить весь backbone (если unfreeze_backbone: true)

batch_size: 4                         # Общий batch_size по умолчанию
epochs: 150                           # Общее количество эпох по умолчанию

initial_learning_rate: 0.001          # Для обучения "голов" с замороженным backbone
finetune_learning_rate: 0.00001      # (1e-5) Для этапа fine-tuning'а размороженного backbone

early_stopping_patience: 25
reduce_lr_patience: 10
reduce_lr_factor: 0.2
min_lr_on_plateau: 0.0000001 # (1e-7)

use_augmentation: true

# --- Параметры Функции Потерь (общие для всех детекторов, если не переопределены) ---
loss_weights:
  coordinates: 1.0
  objectness: 1.0
  no_object: 0.5
  classification: 1.0

# --- Параметры для Инференса (общие, могут быть переопределены в predict_config.yaml) ---
# predict_params:
#   confidence_threshold: 0.25
#   iou_threshold: 0.45
#   max_detections: 100