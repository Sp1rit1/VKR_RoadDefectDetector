# RoadDefectDetector/src/configs/detector_config.yaml

# --- Параметры Модели Детектора ---
model_name: "CustomObjectDetector_MobileNetV2_Head_v1" # Описательное имя твоей модели (можно изменить, если улучшаешь голову)
backbone_name: "MobileNetV2"        # Какую pre-trained модель использовать как основу
input_shape: [416, 416, 3]       # Входной размер изображений для детектора [высота, ширина, каналы]
                                 # Должен совпадать с target_height/width из data_loader
freeze_backbone: true          # true - заморозить веса базовой модели (для начального обучения "голов")
                                 # false - разморозить backbone для fine-tuning (используй с очень низким LR)

# Параметры для "тела" и "головы" предсказаний
head_conv_filters: 256           # Количество фильтров в сверточных слоях "тела" и "головы"

# --- Параметры Классов и Якорей ---
classes: ["pit", "crack"]        # Список классов для детекции. Порядок важен (pit:0, crack:1)
                                 # Убедись, что совпадает с разметкой XML и CLASSES_LIST_GLOBAL_FOR_DETECTOR в data_loader
num_classes: 2                   # Количество классов, должно соответствовать длине списка 'classes'

# Якорные рамки (anchors), рассчитанные с помощью calculate_anchors.py
# Формат: [нормализованная_ширина, нормализованная_высота] относительно всего изображения
anchors_wh_normalized:
  - [0.1326, 0.0919]
  - [0.1059, 0.3704]
  - [0.3600, 0.1728]
  - [0.1484, 0.8278]
  - [0.7600, 0.2444]
  - [0.6420, 0.6129]

num_anchors_per_location: 6    # Количество якорей, используемых в каждой ячейке сетки предсказаний.
                               # Должно соответствовать количеству пар в anchors_wh_normalized.

# --- Параметры Аугментации ---
use_augmentation: true        # Установи в true, чтобы использовать аугментацию, false - чтобы отключить

# --- Параметры Обучения Детектора ---
train_params:
  batch_size: 4                # Попробуй 2, 4, или 8, в зависимости от VRAM.
  epochs: 150                  # Максимальное количество эпох (EarlyStopping может остановить раньше)
  learning_rate: 0.0001        # (1e-4) Начальная скорость обучения для Adam

  # Параметры для коллбэков
  early_stopping_patience: 20  # Количество эпох без улучшения val_loss перед остановкой
  lr_factor: 0.2               # Множитель для снижения LR (0.2 -> уменьшить в 5 раз)
  lr_patience: 7               # Количество эпох без улучшения val_loss перед снижением LR
  min_lr: 0.000001             # (1e-6) Минимальная скорость обучения

# --- Параметры Функции Потерь ---
loss_weights:
  coordinates: 1.0             # Вес для потерь координат рамок (box_loss)
  objectness: 1.0              # Вес для потерь "уверенности в наличии объекта" для позитивных якорей
  no_object: 0.5               # Вес для потерь "уверенности в наличии объекта" для негативных якорей (фон)
  classification: 1.0          # Вес для потерь классификации объекта (class_loss)

